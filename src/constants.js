"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.compilerOptions = exports.targetFile = exports.output = exports.outDir = exports.fileName = exports.isIgnoreHead = exports.methodsWithBody = exports.cachedSchemasWithBody = exports.cachedSchemas = exports.bannerComment = exports.rootName = void 0;
const yargs_1 = __importDefault(require("yargs"));
const helpers_1 = require("yargs/helpers");
const path_1 = require("path");
const utils_1 = require("./utils");
exports.rootName = 'API';
exports.bannerComment = `
/**
 * This file was automatically generated by swagger-extract-definitions.
 * DO NOT MODIFY IT BY HAND.
 */\n
`;
exports.cachedSchemas = [
    { name: 'parameters', capitalized: 'Params' },
    { name: 'headers', capitalized: 'Headers' },
    { name: 'responses', capitalized: 'Reply' },
];
exports.cachedSchemasWithBody = [
    { name: 'requestBody', capitalized: 'Body' },
    ...exports.cachedSchemas,
];
exports.methodsWithBody = ['POST', 'PUT', 'PATCH'];
const options = {
    outDir: {
        type: 'string',
        describe: 'Save output to the directory',
        default: './src/shared/api',
    },
    targetFile: {
        type: 'string',
        describe: 'Target file `swagger.json`',
        default: './scripts/generated/swagger.json',
    },
    ignoreHead: {
        type: 'boolean',
        describe: 'Ignore HEAD endpoints',
        default: false,
    },
    fileName: {
        type: 'string',
        describe: 'File name',
        default: '_generated.ts',
    },
};
const args = (0, yargs_1.default)((0, helpers_1.hideBin)(process.argv))
    .options(options)
    .check(({ targetFile, outDir }) => {
    (0, utils_1.validateSwaggerJson)(targetFile);
    (0, utils_1.validateDirectory)(outDir, 'outDir');
    return true;
}, true)
    .version()
    .strict()
    .help()
    .parseSync();
exports.isIgnoreHead = args.ignoreHead, exports.fileName = args.fileName;
exports.outDir = (0, path_1.resolve)(process.cwd(), args.outDir);
exports.output = (0, path_1.join)(exports.outDir, exports.fileName);
exports.targetFile = (0, path_1.resolve)(process.cwd(), args.targetFile);
exports.compilerOptions = {
    style: {
        singleQuote: true,
        bracketSpacing: true,
        printWidth: 80,
        trailingComma: 'es5',
    },
    unreachableDefinitions: true,
};
