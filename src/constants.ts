import yargs from 'yargs';
import { hideBin } from 'yargs/helpers';
import { resolve, join } from 'path';

import { validateDirectory, validateSwaggerJson } from './utils';
import { CompilerOptions } from './types';

export const rootName = 'API';

export const bannerComment = `
/**
 * This file was automatically generated by swagger-extract-definitions.
 * DO NOT MODIFY IT BY HAND.
 */\n
`;

export const cachedSchemas = [
  { name: 'parameters', capitalized: 'Params' },
  { name: 'headers', capitalized: 'Headers' },
  { name: 'responses', capitalized: 'Reply' },
];

export const cachedSchemasWithBody = [
  { name: 'requestBody', capitalized: 'Body' },
  ...cachedSchemas,
];

export const methodsWithBody = ['POST', 'PUT', 'PATCH'];

const options = {
  outDir: {
    type: 'string',
    describe: 'Save output to the directory',
    default: './src/shared/api',
  },
  targetFile: {
    type: 'string',
    describe: 'Target file `swagger.json`',
    default: './scripts/generated/swagger.json',
  },
  ignoreHead: {
    type: 'boolean',
    describe: 'Ignore HEAD endpoints',
    default: false,
  },
  fileName: {
    type: 'string',
    describe: 'File name',
    default: '_generated.ts',
  },
} as const;

const args = yargs(hideBin(process.argv))
  .options(options)
  .check(({ targetFile, outDir }) => {
    validateSwaggerJson(targetFile);
    validateDirectory(outDir, 'outDir');

    return true;
  }, true)
  .version()
  .strict()
  .help()
  .parseSync();

export const { ignoreHead: isIgnoreHead, fileName } = args;

export const outDir = resolve(process.cwd(), args.outDir);
export const output = join(outDir, fileName);
export const targetFile = resolve(process.cwd(), args.targetFile);

export const compilerOptions: CompilerOptions = {
  style: {
    singleQuote: true,
    bracketSpacing: true,
    printWidth: 80,
    trailingComma: 'es5',
  },
  unreachableDefinitions: true,
  additionalProperties: false,
  unknownAny: true,
};
